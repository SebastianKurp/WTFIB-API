const graphql = require("graphql");

const resolverForAll = (table, api) =>
  new Promise((resolve, reject) => {
    let results = [];
    api(table)
      .select()
      .eachPage(
        (records, nextPage) => {
          results = [...results, ...records];
          nextPage();
        },
        err => {
          resolve(results);
        }
      );
  });

module.exports = airtableGraphql => {
  airtableGraphql.addColumnSupport("multipleAttachment", {
    graphqlType: (column, { getTableType, getInputType, inputPayload }) => ({
      type: inputPayload ? getInputType(column.type) : getTableType(column.type)
    }),
    default: (column, api) => (obj, args, context, info) => {
      return obj.fields[column.name];
    }
  });
};
